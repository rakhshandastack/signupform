// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 2.19.2 (stable) (Tue Feb 7 18:37:17 2023 +0000) on "linux_x64"
// Module: zapp_user_main
// Flags: soundNullSafety(true), enableAsserts(true)
define('zapp_user_main', ['dart_sdk', 'flutter_sdk'], (function load__zapp_user_main(dart_sdk, flutter_sdk) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const _interceptors = dart_sdk._interceptors;
  const js = dart_sdk.js;
  const ui = dart_sdk.ui;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const app = flutter_sdk.src__material__app;
  const theme_data = flutter_sdk.src__material__theme_data;
  const color_scheme = flutter_sdk.src__material__color_scheme;
  const colors = flutter_sdk.src__material__colors;
  const framework = flutter_sdk.src__widgets__framework;
  const binding = flutter_sdk.src__widgets__binding;
  const form = flutter_sdk.src__widgets__form;
  const scaffold = flutter_sdk.src__material__scaffold;
  const container = flutter_sdk.src__widgets__container;
  const scroll_view = flutter_sdk.src__widgets__scroll_view;
  const basic = flutter_sdk.src__widgets__basic;
  const edge_insets = flutter_sdk.src__painting__edge_insets;
  const text = flutter_sdk.src__widgets__text;
  const text_style = flutter_sdk.src__painting__text_style;
  const icon = flutter_sdk.src__widgets__icon;
  const icons = flutter_sdk.src__material__icons;
  const elevated_button = flutter_sdk.src__material__elevated_button;
  const app_bar = flutter_sdk.src__material__app_bar;
  const text_form_field = flutter_sdk.src__material__text_form_field;
  const input_decorator = flutter_sdk.src__material__input_decorator;
  const input_border = flutter_sdk.src__material__input_border;
  const border_radius = flutter_sdk.src__painting__border_radius;
  var $46zapp_entry = Object.create(dart.library);
  var main = Object.create(dart.library);
  var web_plugin_registrant = Object.create(dart.library);
  var signupform = Object.create(dart.library);
  var appbarstyle = Object.create(dart.library);
  var inputtextfield = Object.create(dart.library);
  var $toString = dartx.toString;
  var $isEmpty = dartx.isEmpty;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T = {
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    ListOfString: () => (T.ListOfString = dart.constFn(core.List$(core.String)))(),
    ListOfStringTodynamic: () => (T.ListOfStringTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T.ListOfString()])))(),
    JSArrayOfString: () => (T.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    dynamicToNull: () => (T.dynamicToNull = dart.constFn(dart.fnType(core.Null, [dart.dynamic])))(),
    VoidToNull: () => (T.VoidToNull = dart.constFn(dart.fnType(core.Null, [])))(),
    ObjectAndStackTraceTovoid: () => (T.ObjectAndStackTraceTovoid = dart.constFn(dart.fnType(dart.void, [core.Object, core.StackTrace])))(),
    ZoneAndZoneDelegateAndZone__Tovoid: () => (T.ZoneAndZoneDelegateAndZone__Tovoid = dart.constFn(dart.fnType(dart.void, [async.Zone, async.ZoneDelegate, async.Zone, core.String])))(),
    GlobalKeyOfFormState: () => (T.GlobalKeyOfFormState = dart.constFn(framework.GlobalKey$(form.FormState)))(),
    JSArrayOfWidget: () => (T.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    StringN: () => (T.StringN = dart.constFn(dart.nullable(core.String)))(),
    StringNToStringN: () => (T.StringNToStringN = dart.constFn(dart.fnType(T.StringN(), [T.StringN()])))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.fn(main.main, T.VoidTovoid());
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: signupform.SignUpForm.prototype,
        [Widget_key]: null
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: main.MyApp.prototype,
        [Widget_key]: null
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 10,
        [EdgeInsets_right]: 10,
        [EdgeInsets_top]: 10,
        [EdgeInsets_left]: 10
      });
    }
  }, false);
  var C = Array(4).fill(void 0);
  var I = [
    "file:///zapp/project/lib/main.dart",
    "package:flutter_app/signupform.dart",
    "package:flutter_app/components/inputtextfield.dart"
  ];
  $46zapp_entry.runAppGuarded = function runAppGuarded() {
    async.runZonedGuarded(core.Null, dart.fn(() => {
      if (T.ListOfStringTodynamic().is(C[0] || CT.C0)) {
        T.ListOfStringTodynamic().as(C[0] || CT.C0)(T.JSArrayOfString().of([]));
      } else {
        (C[0] || CT.C0)();
      }
      if (js.context.hasProperty("__notifyFlutterRendered")) {
        async.Future.delayed(new core.Duration.new({milliseconds: 250})).then(core.Null, dart.fn(_ => {
          js.context.callMethod("__notifyFlutterRendered", [false]);
        }, T.dynamicToNull()));
      }
    }, T.VoidToNull()), dart.fn((e, stackTrace) => {
      if (js.context.hasProperty("zappHandlerUserError")) {
        js.context.callMethod("zappHandlerUserError", [e[$toString](), stackTrace.toString()]);
      }
    }, T.ObjectAndStackTraceTovoid()), {zoneSpecification: new async._ZoneSpecification.new({print: dart.fn((self, parent, zone, line) => {
          if (js.context.hasProperty("zappHandlerUserPrint")) {
            js.context.callMethod("zappHandlerUserPrint", [line]);
          }
        }, T.ZoneAndZoneDelegateAndZone__Tovoid())})});
  };
  $46zapp_entry.main = function main$() {
    return async.async(dart.void, function* main() {
      yield ui.webOnlyWarmupEngine({runApp: dart.fn(() => {
          $46zapp_entry.runAppGuarded();
        }, T.VoidToNull()), registerPlugins: dart.fn(() => {
          web_plugin_registrant.registerPlugins();
        }, T.VoidToNull())});
    });
  };
  var Widget_key = dart.privateName(framework, "Widget.key");
  main.MyApp = class MyApp extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new main.MyApp.new({key: key});
    }
    build(context) {
      return new app.MaterialApp.new({title: "forms ,validation and navigation", theme: theme_data.ThemeData.new({colorScheme: color_scheme.ColorScheme.fromSwatch({primarySwatch: colors.Colors.deepPurple}).copyWith({secondary: colors.Colors.deepOrange})}), home: C[1] || CT.C1, debugShowCheckedModeBanner: false});
    }
  };
  (main.MyApp.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    main.MyApp.__proto__.new.call(this, {key: key});
    ;
  }).prototype = main.MyApp.prototype;
  dart.addTypeTests(main.MyApp);
  dart.addTypeCaches(main.MyApp);
  dart.setMethodSignature(main.MyApp, () => ({
    __proto__: dart.getMethods(main.MyApp.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.MyApp, I[0]);
  main.main = function main$0() {
    binding.runApp(C[2] || CT.C2);
  };
  web_plugin_registrant.registerPlugins = function registerPlugins() {
  };
  signupform.SignUpForm = class SignUpForm extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new signupform.SignUpForm.new({key: key});
    }
    build(context) {
      let formkey = T.GlobalKeyOfFormState().new();
      function validate() {
        if (dart.nullCheck(formkey.currentState).validate()) {
          core.print("successfully login");
        } else {
          core.print("error");
        }
      }
      dart.fn(validate, T.VoidTovoid());
      return new scaffold.Scaffold.new({appBar: appbarstyle.appBarStyle(), body: new container.Container.new({color: new ui.Color.fromARGB(255, 199, 185, 223), child: new scroll_view.ListView.new({children: T.JSArrayOfWidget().of([new basic.Padding.new({padding: new edge_insets.EdgeInsets.all(9), child: new form.Form.new({key: formkey, child: new basic.Column.new({children: T.JSArrayOfWidget().of([new text.Text.new("WELCOME", {style: new text_style.TextStyle.new({color: colors.Colors.black, fontFamily: "fonts/BebasNeue.regular", fontSize: 20, fontWeight: ui.FontWeight.bold})}), new inputtextfield.InputTextField.new("enter username", new icon.Icon.new(icons.Icons.person)), new inputtextfield.InputTextField.new("enter email", new icon.Icon.new(icons.Icons.email)), new inputtextfield.InputTextField.new("enter password", new icon.Icon.new(icons.Icons.remove_red_eye)), new basic.Center.new({child: new basic.Column.new({children: T.JSArrayOfWidget().of([new elevated_button.ElevatedButton.new({child: new text.Text.new("register"), onPressed: validate})])})})])})})})])})})});
    }
  };
  (signupform.SignUpForm.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    signupform.SignUpForm.__proto__.new.call(this, {key: key});
    ;
  }).prototype = signupform.SignUpForm.prototype;
  dart.addTypeTests(signupform.SignUpForm);
  dart.addTypeCaches(signupform.SignUpForm);
  dart.setMethodSignature(signupform.SignUpForm, () => ({
    __proto__: dart.getMethods(signupform.SignUpForm.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(signupform.SignUpForm, I[1]);
  appbarstyle.appBarStyle = function appBarStyle() {
    return new app_bar.AppBar.new({backgroundColor: new ui.Color.fromARGB(255, 238, 160, 44), title: new text.Text.new("SignUpForm", {style: new text_style.TextStyle.new({fontSize: 30, color: colors.Colors.white})})});
  };
  var hintText$ = dart.privateName(inputtextfield, "InputTextField.hintText");
  var icon$ = dart.privateName(inputtextfield, "InputTextField.icon");
  var EdgeInsets_bottom = dart.privateName(edge_insets, "EdgeInsets.bottom");
  var EdgeInsets_right = dart.privateName(edge_insets, "EdgeInsets.right");
  var EdgeInsets_top = dart.privateName(edge_insets, "EdgeInsets.top");
  var EdgeInsets_left = dart.privateName(edge_insets, "EdgeInsets.left");
  inputtextfield.InputTextField = class InputTextField extends framework.StatelessWidget {
    get hintText() {
      return this[hintText$];
    }
    set hintText(value) {
      this[hintText$] = value;
    }
    get icon() {
      return this[icon$];
    }
    set icon(value) {
      this[icon$] = value;
    }
    static ['_#new#tearOff'](hintText, icon) {
      return new inputtextfield.InputTextField.new(hintText, icon);
    }
    build(context) {
      return new basic.Padding.new({padding: C[3] || CT.C3, child: new text_form_field.TextFormField.new({decoration: new input_decorator.InputDecoration.new({hintText: this.hintText, prefixIcon: this.icon, fillColor: new ui.Color.fromARGB(255, 224, 135, 108), border: new input_border.OutlineInputBorder.new({borderRadius: new border_radius.BorderRadius.circular(20)})}), validator: dart.fn(val => {
            if (dart.nullCheck(val)[$isEmpty]) {
              return "error";
            } else {
              return null;
            }
          }, T.StringNToStringN())})});
    }
  };
  (inputtextfield.InputTextField.new = function(hintText, icon) {
    this[hintText$] = hintText;
    this[icon$] = icon;
    inputtextfield.InputTextField.__proto__.new.call(this);
    ;
  }).prototype = inputtextfield.InputTextField.prototype;
  dart.addTypeTests(inputtextfield.InputTextField);
  dart.addTypeCaches(inputtextfield.InputTextField);
  dart.setMethodSignature(inputtextfield.InputTextField, () => ({
    __proto__: dart.getMethods(inputtextfield.InputTextField.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(inputtextfield.InputTextField, I[2]);
  dart.setFieldSignature(inputtextfield.InputTextField, () => ({
    __proto__: dart.getFields(inputtextfield.InputTextField.__proto__),
    hintText: dart.fieldType(dart.nullable(core.String)),
    icon: dart.fieldType(dart.nullable(icon.Icon))
  }));
  dart.trackLibraries("zapp_user_main", {
    "file:///zapp/project/.zapp_entry.dart": $46zapp_entry,
    "file:///zapp/project/lib/main.dart": main,
    "file:///zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart": web_plugin_registrant,
    "package:flutter_app/signupform.dart": signupform,
    "package:flutter_app/components/appbarstyle.dart": appbarstyle,
    "package:flutter_app/components/inputtextfield.dart": inputtextfield
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["/zapp/project/.zapp_entry.dart","/zapp/project/lib/main.dart","/zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart","/zapp/project/lib/signupform.dart","/zapp/project/lib/components/appbarstyle.dart","/zapp/project/lib/components/inputtextfield.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CI,IA1BF,iCAAgB;AACd,UAAoB,6BAGD;AAF8B,QAA9B,AAAkB,6BAElB,eAF2B;;AAEL,QAAF,CAApB;;AAEnB,UAAO,AAAQ,uBAAY;AAKvB,QAJK,AAAqC,qBAA7B,qCAAuB,uBAAW,QAAC;AAG9C,UAFC,AAAQ,sBAAW,2BAA2B,CAC/C;;;wBAIL,SAAC,GAAG;AACL,UAAO,AAAQ,uBAAY;AAIvB,QAHC,AAAQ,sBAAW,wBAAwB,CAC5C,AAAE,CAAD,eACD,AAAW,UAAD;;2DAGM,yCACb,SAAC,MAAM,QAAQ,MAAM;AAC1B,cAAO,AAAQ,uBAAY;AAC4B,YAAlD,AAAQ,sBAAW,wBAAwB,CAAC,IAAI;;;EAI3D;;AAEiB;AAQd,MAPD,MAAS,gCACC;AACS,UAAf;6CAEe;AACmB,UAAjB;;IAGvB;;;;;;;;UC5C4B;AACxB,YAAO,iCACE,2CACA,uCACoB,AAA6C,oDAAZ,gDAAuC,+EAIvE;IAEhC;;;QAbmB;AAAb,8CAAa,GAAG;;EAAE;;;;;;;;;AAJH,IAArB;EACF;;ECEwB;;;;;;UCEI;AACH,oBAAU;AAC/B,eAAK;AACH,YAAwB,AAAE,eAAtB,AAAQ,OAAD;AACkB,UAA3B,WAAM;;AAEQ,UAAd,WAAM;;;;AAQV,YAAO,oCACG,iCACF,oCACW,sBAAS,KAAK,KAAK,KAAK,aAC9B,wCAEK,wBACR,gCACsB,+BAAI,WACjB,wBACA,OAAO,SACL,gCACK,wBACR,kBACE,mBACO,qCACS,iCACD,qCACH,gBACa,wBAG3B,sCACE,kBACA,kBACQ,sBAGV,sCACE,eACA,kBACQ,qBAGV,sCACE,kBACA,kBACQ,8BAIV,6BACS,gCACK,wBACR,+CACS,kBAAK,wBACD,QAAQ;IAY/C;;;QA3EwB;AAAlB,yDAAkB,GAAG;;EAAE;;;;;;;;;ACDzB,UAAO,0CACkB,sBAAS,KAAK,KAAK,KAAK,YACxC,kBACL,sBACO,wCACK,WACI;EAMxB;;;;;;;;ICXQ;;;;;;IAEF;;;;;;;;;UAWoB;AACxB,YAAO,uDAEE,mDAES,mDACA,2BACE,sBACK,sBAAS,KAAK,KAAK,KAAK,cACjC,uDACqB,wCAAS,oBAG7B,QAAC;AACV,gBAAO,AAAE,eAAL,GAAG;AACL,oBAAO;;AAEP,oBAAO;;;IAInB;;gDA3BO,UACA;IADA;IACA;AAFP;;EAIC","file":"main.js"}');
  // Exports:
  return {
    zapp__project__$46zapp_entry: $46zapp_entry,
    zapp__project__lib__main: main,
    zapp__project__$46dart_tool__dartpad__web_plugin_registrant: web_plugin_registrant,
    signupform: signupform,
    components__appbarstyle: appbarstyle,
    components__inputtextfield: inputtextfield
  };
}));

//# sourceMappingURL=main.js.map
